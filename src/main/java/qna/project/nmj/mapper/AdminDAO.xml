<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="qna.project.nmj.beans.dao.AdminDAO">

	<select id="selectAllMember" resultType="qna.project.nmj.beans.MemberDTO">
		SELECT * FROM NMJ_member WHERE mb_type = 1 ORDER BY mb_uid DESC
	</select>
	
	<select id="selectAllStore" resultType="qna.project.nmj.beans.StoreDTO">
		SELECT * FROM NMJ_store
	</select>
	
	<update id="deleteMember" flushCache="true">
		UPDATE NMJ_member 
		SET mb_type = -1 
		WHERE mb_uid = #{param1}
	</update>
	
	<select id="selectAllStoreMember" resultType="qna.project.nmj.beans.StoreMemberDTO">
		SELECT a.*, b.store_type, b.store_name FROM NMJ_member a INNER JOIN NMJ_store b ON a.mb_uid = b.mb_uid WHERE a.mb_type = 2 ORDER BY mb_uid DESC
	</select>
	
	<select id="selectMemberByUid" 
 		resultType="qna.project.nmj.beans.MemberDTO">
 		SELECT * FROM NMJ_member
		WHERE mb_uid = #{param1}
 	</select>
 	
 	<select id="selectStoreByUid" 
 		resultType="qna.project.nmj.beans.StoreDTO">
 		SELECT * FROM NMJ_store
		WHERE mb_uid = #{param1}
 	</select>
 	
 	<select id="selectStoreBySUid" 
 		resultType="qna.project.nmj.beans.StoreMemberDTO">
 		SELECT a.*, b.mb_uid
 		FROM NMJ_store a
 		JOIN NMJ_member b ON a.mb_uid = b.mb_uid
		WHERE store_uid = #{param1}
 	</select>
 	
 	<select id="selectAllReview" resultType="qna.project.nmj.beans.ReviewJoinDTO">
		SELECT a.*, b.store_type, b.store_name, c.mb_id 
		FROM NMJ_review a 
		JOIN NMJ_store b ON a.store_uid = b.store_uid 
		JOIN NMJ_member c ON a.mb_uid = c.mb_uid 
		WHERE review_ban = 0
		ORDER BY review_uid DESC
	</select>
	
	<select id="selectAllReview2" resultType="qna.project.nmj.beans.ReviewJoinDTO">
		SELECT a.*, c.mb_id 
		FROM NMJ_review a
		JOIN NMJ_member c ON a.mb_uid = c.mb_uid 
		WHERE store_uid = 0
		ORDER BY review_uid DESC
	</select>
	
	<select id="selectAllReply" resultType="qna.project.nmj.beans.ReplyJoinDTO">
		SELECT a.*, b.mb_id, c.review_content 
		FROM NMJ_reply a 
		JOIN NMJ_member b ON a.mb_uid = b.mb_uid 
		JOIN NMJ_review c ON a.review_uid = c.review_uid
		WHERE reply_ban = 0
		ORDER BY reply_uid DESC
	</select>
	
	<update id="deleteReview" flushCache="true">
		UPDATE NMJ_review 
		SET review_ban = 1
		WHERE review_uid = #{param1}
	</update>
	
	<update id="deleteReply" flushCache="true">
		UPDATE NMJ_reply
		SET reply_ban = 1
		WHERE reply_uid = #{param1}
	</update>
	
	<select id="selectReviewByUid" 
 		resultType="qna.project.nmj.beans.ReviewJoinDTO">
 		SELECT a.*, b.store_type, b.store_name, c.mb_id 
		FROM NMJ_review a 
		JOIN NMJ_store b ON a.store_uid = b.store_uid 
		JOIN NMJ_member c ON a.mb_uid = c.mb_uid 
		WHERE review_uid = #{param1}
 	</select>
 	
	<select id="selectReviewByUid2" 
 		resultType="qna.project.nmj.beans.ReviewJoinDTO">
 		SELECT a.*, c.mb_id 
		FROM NMJ_review a 
		JOIN NMJ_member c ON a.mb_uid = c.mb_uid 
		WHERE review_uid = #{param1}
 	</select>
 	
 	<select id="selectReplyByUid" 
 		resultType="qna.project.nmj.beans.ReplyJoinDTO">
 		SELECT a.*, b.mb_id, c.review_content 
		FROM NMJ_reply a 
		JOIN NMJ_member b ON a.mb_uid = b.mb_uid 
		JOIN NMJ_review c ON a.review_uid = c.review_uid
		WHERE reply_uid = #{param1}
 	</select>
 	
	<select id="selectRequestByUid" 
 		resultType="qna.project.nmj.beans.RequestDTO">
 		SELECT * FROM NMJ_request WHERE request_uid = #{param1}
 	</select>
 	
 	<update id="increaseViewCount">
 		 UPDATE NMJ_review SET review_viewCount = review_viewCount + 1 
 		 WHERE review_uid = #{param1}
 	</update>
 	
 	<select id="searchMemberByName" 
 		resultType="qna.project.nmj.beans.MemberDTO">
 		SELECT * FROM NMJ_member 
 		WHERE mb_name LIKE CONCAT('%',#{search},'%') and mb_type = 1
 	</select>
 	
 	<select id="searchMemberById" 
 		resultType="qna.project.nmj.beans.MemberDTO">
 		SELECT * FROM NMJ_member WHERE mb_id LIKE CONCAT('%',#{search},'%') and mb_type = 1
 	</select>
 	
 	<select id="searchStoreByName" 
 		resultType="qna.project.nmj.beans.StoreMemberDTO">
 		SELECT a.*, b.store_type, b.store_name FROM NMJ_member a INNER JOIN NMJ_store b ON a.mb_uid = b.mb_uid WHERE a.mb_type = 2
 		and store_name LIKE CONCAT('%',#{search},'%')
 	</select>
 	
 	<select id="searchStoreById" 
 		resultType="qna.project.nmj.beans.StoreMemberDTO">
 		SELECT a.*, b.store_type, b.store_name FROM NMJ_member a INNER JOIN NMJ_store b ON a.mb_uid = b.mb_uid WHERE a.mb_type = 2
 		and mb_id LIKE CONCAT('%',#{search},'%')
 	</select>
 	
 	<select id="searchReviewByContent" 
 		resultType="qna.project.nmj.beans.ReviewJoinDTO">
 		SELECT a.*, b.store_type, b.store_name, c.mb_id 
		FROM NMJ_review a 
		JOIN NMJ_store b ON a.store_uid = b.store_uid 
		JOIN NMJ_member c ON a.mb_uid = c.mb_uid
 		WHERE review_content LIKE CONCAT('%',#{search},'%')
 	</select>
 	
 	<select id="searchReviewByContent2" 
 		resultType="qna.project.nmj.beans.ReviewJoinDTO">
 		SELECT a.*, c.mb_id 
		FROM NMJ_review a
		JOIN NMJ_member c ON a.mb_uid = c.mb_uid
 		WHERE review_content LIKE CONCAT('%',#{search},'%') and store_uid = 0
 	</select>
 	
 	<select id="searchReviewById" 
 		resultType="qna.project.nmj.beans.ReviewJoinDTO">
 		SELECT a.*, b.store_type, b.store_name, c.mb_id 
		FROM NMJ_review a 
		JOIN NMJ_store b ON a.store_uid = b.store_uid 
		JOIN NMJ_member c ON a.mb_uid = c.mb_uid
 		WHERE c.mb_id LIKE CONCAT('%',#{search},'%')
 	</select>
 	
 	<select id="searchReviewById2" 
 		resultType="qna.project.nmj.beans.ReviewJoinDTO">
 		SELECT a.*, c.mb_id 
		FROM NMJ_review a 
		JOIN NMJ_member c ON a.mb_uid = c.mb_uid
 		WHERE c.mb_id LIKE CONCAT('%',#{search},'%') and store_uid = 0
 	</select>
 	
 	<select id="searchReplyByContent" 
 		resultType="qna.project.nmj.beans.ReplyJoinDTO">
 		SELECT a.*, b.mb_id, c.review_content 
		FROM NMJ_reply a 
		JOIN NMJ_member b ON a.mb_uid = b.mb_uid 
		JOIN NMJ_review c ON a.review_uid = c.review_uid
 		WHERE reply_content LIKE CONCAT('%',#{search},'%')
 	</select>
 	
 	<select id="searchReplyById" 
 		resultType="qna.project.nmj.beans.ReplyJoinDTO">
 		SELECT a.*, b.mb_id, c.review_content 
		FROM NMJ_reply a 
		JOIN NMJ_member b ON a.mb_uid = b.mb_uid 
		JOIN NMJ_review c ON a.review_uid = c.review_uid
 		WHERE b.mb_id LIKE CONCAT('%',#{search},'%')
 	</select>
 	
 	<select id="selectNStore" 
 		resultType="qna.project.nmj.beans.StoreMemberDTO">
 		SELECT a.*, b.store_type, b.store_name FROM NMJ_member a INNER JOIN NMJ_store b ON a.mb_uid = b.mb_uid WHERE a.mb_type = 2
 		and store_type = 1
 	</select>
 	
 	<select id="selectMStore" 
 		resultType="qna.project.nmj.beans.StoreMemberDTO">
 		SELECT a.*, b.store_type, b.store_name FROM NMJ_member a INNER JOIN NMJ_store b ON a.mb_uid = b.mb_uid WHERE a.mb_type = 2
 		and store_type = 2
 	</select>
 	
 	<select id="selectJStore" 
 		resultType="qna.project.nmj.beans.StoreMemberDTO">
 		SELECT a.*, b.store_type, b.store_name FROM NMJ_member a INNER JOIN NMJ_store b ON a.mb_uid = b.mb_uid WHERE a.mb_type = 2
 		and store_type = 3
 	</select>
 	
 	<select id="selectAllRequest" resultType="qna.project.nmj.beans.RequestDTO">
		SELECT * FROM NMJ_request ORDER BY request_uid DESC
	</select>
	
	<update id="updateStore">
 		 UPDATE NMJ_store
 		 SET store_name = #{store_name}, store_address = #{store_address}, store_regNum = #{store_regNum}, store_regImg_org = #{store_regImg_org}, store_regImg_sav = #{store_regImg_sav}, store_type = #{store_type}, store_dtype = #{store_dtype}, store_lat = #{store_lat}, store_long = #{store_long}
 		 WHERE store_uid = #{store_uid}
 	</update>
 	
	<update id="rejectRequest">
 		 UPDATE NMJ_request SET request_check = 2
 		 WHERE request_uid = #{param1}
 	</update>
 	
 	<update id="solveRequest">
 		 UPDATE NMJ_request SET request_check = 1
 		 WHERE request_uid = #{param1}
 	</update>
 	
 	<update id="acceptStore">
 		 UPDATE NMJ_member SET mb_type = 2
 		 WHERE mb_uid = #{param1}
 	</update>
 	
 	<select id="selectStoreMemberByUid" 
 		resultType="qna.project.nmj.beans.StoreMemberDTO">
 		SELECT a.*, b.mb_uid
 		FROM NMJ_store a JOIN NMJ_member b ON a.mb_uid = b.mb_uid 
		WHERE store_uid = #{param1}
 	</select>
 	
 	<select id="selectAllNotice" 
 		resultType="qna.project.nmj.beans.NoticeDTO">
 		SELECT * FROM NMJ_notice WHERE notice_type = 0 ORDER BY notice_uid DESC
 	</select>
 	
 	<select id="selectAllEvent" 
 		resultType="qna.project.nmj.beans.NoticeDTO">
 		SELECT * FROM NMJ_notice WHERE notice_type = 1 ORDER BY notice_uid DESC
 	</select>
 	
 	<select id="selectAllOngoingEvent" 
 		resultType="qna.project.nmj.beans.NoticeDTO">
 		SELECT * FROM NMJ_notice 
 		WHERE notice_type = 1 and 
 		 notice_startDate &lt;= now() and notice_endDate &gt;= now()
 		ORDER BY notice_uid DESC
 	</select>
 	
	<insert id="insertNotice" flushCache="true" parameterType="qna.project.nmj.beans.NoticeDTO">
		INSERT INTO NMJ_notice (notice_subject , notice_content, notice_type)
		VALUES (#{param1}, #{param2}, 0)
	</insert>
	
	<insert id="insertEvent" flushCache="true" parameterType="qna.project.nmj.beans.NoticeDTO">
		INSERT INTO NMJ_notice (notice_subject , notice_content, notice_startDate, notice_endDate, notice_type)
		VALUES (#{param1}, #{param2}, #{param3}, #{param4}, 1)
	</insert>
	
	<select id="selectNoticeByUid" resultType="qna.project.nmj.beans.NoticeDTO">
		SELECT * FROM NMJ_notice WHERE notice_uid = #{param1}
	</select>
	
	<update id="increaseNoticeViewCount">
 		 UPDATE NMJ_notice SET notice_viewCount = notice_viewCount + 1 
 		 WHERE notice_uid = #{param1}
 	</update>
 	
 	<delete id="deleteNotice">
		DELETE FROM NMJ_notice
		WHERE notice_uid = #{notice_uid}
	</delete>
	
	<update id="updateNotice" flushCache="true">
		UPDATE NMJ_notice
		SET notice_subject= #{notice_subject}, notice_content = #{notice_content}
		WHERE notice_uid = #{notice_uid}
	</update>
	
	<update id="updateEvent" flushCache="true">
		UPDATE NMJ_notice
		SET notice_subject= #{notice_subject}, notice_content = #{notice_content}, notice_startDate = #{notice_startDate}, notice_endDate = #{notice_endDate}
		WHERE notice_uid = #{notice_uid}
	</update>

</mapper>
